---
import type { ClubsPropsPages } from '@devprotocol/clubs-core'
import type { Posts } from '../types'
import { ClubsSlotName } from '@devprotocol/clubs-core'

const { PageContentHomeBeforeContent } = ClubsSlotName

interface Props extends ClubsPropsPages {
	posts: Posts[]
	feedId: string
	slots: {
		readonly [PageContentHomeBeforeContent]?: {
			readonly enabled: boolean
			readonly title: string
			readonly items: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10
		}
	}
}

const { posts, feedId, slots } = Astro.props

const widgetContent = slots[PageContentHomeBeforeContent]

const limitedPosts = posts.filter((post) => {
	return posts.indexOf(post) < widgetContent?.items
})

const getTimeAgo = (date: Date) => {
	const now = new Date()
	const diff = now.getTime() - date.getTime()
	const seconds = Math.floor(diff / 1000)
	const minutes = Math.floor(seconds / 60)
	const hours = Math.floor(minutes / 60)
	const days = Math.floor(hours / 24)

	if (days > 0) {
		return `${days} days ago`
	} else if (hours > 0) {
		return `${hours} hours ago`
	} else if (minutes > 0) {
		return `${minutes} minutes ago`
	} else {
		return `${seconds} seconds ago`
	}
}
---

<section class="grid">
	<h2
		class="text-center text-2xl font-bold lg:text-4xl"
		style="
    margin-bottom: 1rem;
"
	>
		{widgetContent?.title}
	</h2>
	<ul style="
    padding: 0.5rem;
    border: 1px solid;
    border-radius: 8px;
">
		{
			limitedPosts.map((post) => (
				<li
					style="
    padding: 1rem;
    display: grid;
    justify-content: space-around;
    grid-template-columns: 1fr auto;
"
				>
					<span
						style="
    font-weight: bold;
"
					>
						{post.title}
					</span>
					<span
						style="
    opacity: 0.6;
"
					>
						{getTimeAgo(post.created_at)}
					</span>
				</li>
			))
		}
	</ul>
</section>
